<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd ">

	<sec:http pattern="/login**"
		access-denied-page="/login.jsp?authorization_error=true"
		disable-url-rewriting="true"
		authentication-manager-ref="userAuthenticationManager">

		<sec:form-login
			authentication-failure-url="/login.jsp?authentication_error=true"
			default-target-url="/index.html" login-page="/login.jsp"
			login-processing-url="/login.do" />

		<sec:logout logout-url="/logout.do"
			logout-success-url="/index.html" />

		<sec:anonymous />
	</sec:http>

	<sec:http pattern="/oauth/token" create-session="stateless"
		authentication-manager-ref="authenticationManager">
		<sec:intercept-url pattern="/oauth/**"
			access="IS_AUTHENTICATED_FULLY" />
		<sec:anonymous enabled="false" />
		<sec:http-basic
			entry-point-ref="clientAuthenticationEntryPoint" />
		<sec:custom-filter
			ref="clientCredentialsTokenEndpointFilter" before="BASIC_AUTH_FILTER" />
		<sec:access-denied-handler
			ref="oauthAccessDeniedHandler" />
	</sec:http>

	<sec:http pattern="/logout" create-session="never"
		entry-point-ref="oauthAuthenticationEntryPoint">
		<sec:anonymous enabled="false" />
		<sec:intercept-url pattern="/logout" method="GET" />
		<sec:logout invalidate-session="true" logout-url="/logout"
			success-handler-ref="logoutSuccessHandler" />
		<sec:custom-filter ref="resourceServerFilter"
			before="PRE_AUTH_FILTER" />
		<sec:access-denied-handler
			ref="oauthAccessDeniedHandler" />
	</sec:http>

	<sec:http create-session="never"
		entry-point-ref="oauthAuthenticationEntryPoint">
		<sec:intercept-url pattern="/index.html"
			access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<sec:intercept-url pattern="/"
			access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<sec:intercept-url pattern="/multimedia/download/**"
			access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<sec:intercept-url
			pattern="/multimedia/profileimage/**"
			access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<sec:intercept-url pattern="/user-details"
			access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<sec:intercept-url
			pattern="/rest/viewconfiguration/**"
			access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<sec:intercept-url pattern="/**"
			access="ROLE_OPENMRS" />
		<sec:custom-filter ref="resourceServerFilter"
			before="PRE_AUTH_FILTER" />
		<sec:access-denied-handler
			ref="oauthAccessDeniedHandler" />
	</sec:http>

	<bean id="logoutSuccessHandler"
		class="org.opensrp.web.security.LogoutHandler">
		<property name="tokenstore" ref="tokenStore"></property>
	</bean>

	<bean id="oauthAuthenticationEntryPoint"
		class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<property name="realmName" value="OpenSRP" />
	</bean>

	<bean id="clientAuthenticationEntryPoint"
		class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<property name="realmName" value="OpenSRP/client" />
		<property name="typeName" value="Basic" />
	</bean>

	<bean id="oauthAccessDeniedHandler"
		class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler">
	</bean>

	<bean id="clientCredentialsTokenEndpointFilter"
		class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
		<property name="authenticationManager"
			ref="authenticationManager" />
	</bean>

	<sec:authentication-manager
		alias="authenticationManager">
		<sec:authentication-provider
			user-service-ref="clientDetailsUserService" />
	</sec:authentication-manager>

	<bean id="clientDetailsUserService"
		class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<constructor-arg ref="clientDetails" />
	</bean>

	<sec:authentication-manager
		id="userAuthenticationManager">
		<sec:authentication-provider
			ref="userAuthenticationProvider">
		</sec:authentication-provider>
	</sec:authentication-manager>

	<bean id="userAuthenticationProvider"
		class="org.opensrp.web.security.OauthAuthenticationProvider">
	</bean>

	<bean id="userApprovalHandler"
		class="org.springframework.security.oauth2.provider.approval.TokenServicesUserApprovalHandler">
		<property name="tokenServices" ref="tokenServices" />
	</bean>


	<oauth:authorization-server
		client-details-service-ref="clientDetails"
		token-services-ref="tokenServices"
		user-approval-handler-ref="userApprovalHandler">
		<oauth:authorization-code />
		<oauth:implicit />
		<oauth:refresh-token />
		<oauth:client-credentials />
		<oauth:password
			authentication-manager-ref="userAuthenticationManager" />
	</oauth:authorization-server>

	<oauth:resource-server id="resourceServerFilter"
		resource-id="OpenSRP" token-services-ref="tokenServices" />

	<bean id="tokenStore"
		class="org.springframework.security.oauth2.provider.token.InMemoryTokenStore" />

	<bean id="tokenServices"
		class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<property name="tokenStore" ref="tokenStore" />
		<property name="supportRefreshToken" value="true" />
		<property name="accessTokenValiditySeconds" value="300000"></property>
		<property name="clientDetailsService" ref="clientDetails" />
	</bean>

	<oauth:resource-server id="resourceServerFilter"
		resource-id="OpenSRP" token-services-ref="tokenServices" />

	<oauth:client-details-service
		id="clientDetails">
		<oauth:client client-id="opensrp-trusted-client"
			authorized-grant-types="password,authorization_code,implicit"
			authorities="ROLE_CLIENT, ROLE_TRUSTED_CLIENT"
			scope="read,write,trust" secret="S0M3S3crET"
			access-token-validity="300" />

	</oauth:client-details-service>


	<sec:global-method-security
		pre-post-annotations="enabled" proxy-target-class="true">
		<!--you could also wire in the expression handler up at the layer of the 
			http filters. See https://jira.springsource.org/browse/SEC-1452 -->
		<sec:expression-handler
			ref="oauthExpressionHandler" />
	</sec:global-method-security>

	<oauth:expression-handler
		id="oauthExpressionHandler" />

	<oauth:web-expression-handler
		id="oauthWebExpressionHandler" />


</beans>
