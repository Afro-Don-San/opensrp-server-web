<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.opensrp.repository.postgres.mapper.custom.CustomClientMapper">

	<resultMap id="customQueryMap" type="org.opensrp.domain.postgres.CustomQuery">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name"/>
		<result column="uuid" jdbcType="VARCHAR" property="uuid"/>
		<result column="max_health_id" jdbcType="BIGINT" property="maxHealthId"/>
		<result column="is_available" jdbcType="BOOLEAN" property="isAvailable"/>
	</resultMap>

	<resultMap id="customQueryLocationTreeMap" type="org.opensrp.domain.postgres.CustomQuery">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="leaf_loc_id" jdbcType="BIGINT" property="leafLocationId"/>
		<result column="member_id" jdbcType="BIGINT" property="memberId"/>
		<result column="first_name" jdbcType="VARCHAR" property="firstName"/>
		<result column="last_name" jdbcType="VARCHAR" property="lastName"/>
		<result column="loc_tag_name" jdbcType="VARCHAR" property="locationTagName"/>
	</resultMap>
	<resultMap id="targetDetails" type="org.opensrp.domain.postgres.TargetDetails">
		<id column="username" jdbcType="VARCHAR" property="username" />
		<result column="targetid" jdbcType="BIGINT" property="targetId"/>
		<result column="targetname" jdbcType="VARCHAR" property="targetName"/>
		<result column="targetcount" jdbcType="BIGINT" property="targetCount"/>
		<result column="year" jdbcType="VARCHAR" property="year"/>
		<result column="month" jdbcType="VARCHAR" property="month"/>
		<result column="day" jdbcType="VARCHAR" property="day"/>
		<result column="timestamp" jdbcType="BIGINT" property="timestamp"/>
		<result column="start_date" jdbcType="VARCHAR" property="startDate"/>
		<result column="end_date" jdbcType="VARCHAR" property="endDate"/>
	</resultMap>
	<resultMap id="userLocationMap" type="org.opensrp.domain.UserLocationTableName">
		
	</resultMap>

	<insert id="insertSelectiveAndSetId" parameterType="org.opensrp.domain.postgres.Client"
			useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into core.client
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="json != null">
				json,
			</if>
			<if test="serverVersion != null">
				server_version,
			</if>
			<if test="baseEntityId != null">
				base_entity_id,
			</if>
			<if test="district != null">
				district,
			</if>
			<if test="division != null">
				division,
			</if>
			<if test="branch != null">
				branch,
			</if>
			<if test="village != null">
				village,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="json != null">
				#{json,jdbcType=OTHER,typeHandler=org.opensrp.repository.postgres.handler.ClientTypeHandler},
			</if>
			<if test="serverVersion != null">
				#{serverVersion,jdbcType=BIGINT},
			</if>
			<if test="baseEntityId != null">
				#{baseEntityId,jdbcType=VARCHAR},
			</if>
			<if test="district != null">
				#{district,jdbcType=VARCHAR},
			</if>
			<if test="division != null">
				#{division,jdbcType=VARCHAR},
			</if>
			<if test="branch != null">
				#{branch,jdbcType=VARCHAR},
			</if>
			<if test="village != null">
				#{village,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>


	<select id="selectByDocumentId" 
			resultMap="org.opensrp.repository.postgres.mapper.ClientMapper.BaseResultMap">
		select
		<include refid="org.opensrp.repository.postgres.mapper.ClientMapper.Base_Column_List" />
		from core.client${table}
		WHERE json ->> 'id' = #{documentId,jdbcType=VARCHAR} and date_deleted is null
	</select>


	<select id="selectByIdentifier"
			resultMap="org.opensrp.repository.postgres.mapper.ClientMapper.BaseResultMap">
		select
		<include refid="org.opensrp.repository.postgres.mapper.ClientMapper.Base_Column_List" />
		from core.client${table}
		join jsonb_each_text(core.client.json -> 'identifiers') j on true
		where j.value = #{identifier,jdbcType=VARCHAR} and date_deleted is null
	</select>


	<select id="selectByIdentifierOfType"
			resultMap="org.opensrp.repository.postgres.mapper.ClientMapper.BaseResultMap">
		select
		<include refid="org.opensrp.repository.postgres.mapper.ClientMapper.Base_Column_List" />
		from core.client${table}
		where json -> 'identifiers' ->> #{identifierType,jdbcType=VARCHAR} = #{identifier,jdbcType=VARCHAR}
		and date_deleted is null
	</select>


	<select id="selectByAttributeOfType" 
			resultMap="org.opensrp.repository.postgres.mapper.ClientMapper.BaseResultMap">
		select
		<include refid="org.opensrp.repository.postgres.mapper.ClientMapper.Base_Column_List" />
		from core.client${table}
		where json -> 'attributes' ->> #{attributeType,jdbcType=VARCHAR} = #{attribute,jdbcType=VARCHAR}
		and date_deleted is null
	</select>


	<select id="selectByRelationshipIdAndDateCreated"
			resultMap="org.opensrp.repository.postgres.mapper.ClientMapper.BaseResultMap">
		select
		<include refid="org.opensrp.repository.postgres.mapper.ClientMapper.Base_Column_List" />
		from core.client${table}
		join jsonb_each(json -> 'relationships') j on true
		where j.value  ?? #{relationalId,jdbcType=VARCHAR}  and date_deleted is null
		and (json ->> 'dateCreated')::date between #{dateFrom,jdbcType=DATE} and #{dateTo,jdbcType=DATE}
	</select>

	<select id="getClientByUpazila" parameterType="java.lang.String"
			resultMap="org.opensrp.repository.postgres.mapper.ClientMapper.BaseResultMap">
		select * from core.client${table}
		where json->'addresses'->0->'addressFields'->>'cityVillage' = #{name}
	</select>

	<select id="getTeamInfo" parameterType="java.lang.String"
			resultMap="customQueryMap">
		select t.name as name, t.uuid as uuid from core.users u join core.team_member tm on u.id = tm.person_id
		join core.team t on t.id = tm.team_id where u.username = #{username};
	</select>

	<select id="getProviderLocationTreeByChildRole" parameterType="map"
			resultMap="customQueryLocationTreeMap">
		select * from core.get_location_tree(#{memberId}, #{childRoleId});
	</select>

	<select id="selectTargetDetails" parameterType="map" resultMap="targetDetails">
	select
		u.username,
		p.id targetId,
		case
			when lower(p."name") = 'household visit' then 'HH visit'
			when lower(p."name") = 'elco visit' then 'ELCO Registration'
			when lower(p."name") = 'pnc service' then 'PNC Registration'
			when lower(p."name") = 'anc service' then 'ANC Registration'
			when lower(p."name") = 'women service' then 'Women package'
			when lower(p."name") = 'adolescent service' then 'Adolescent package'
			when lower(p."name") = 'ncd service' then 'NCD package'
			when lower(p."name") = 'delivery' then 'Pregnancy Outcome'
			else p."name"
		end targetName,
		td.quantity targetCount,
		td."month",
		td."year",
		td."day",
		td."timestamp",
		TO_CHAR(td.start_date, 'DD-MM-YYYY') start_date,
		TO_CHAR(td.end_date, 'DD-MM-YYYY') end_date
	from
		core.target_details td
		join core.product p on td.product_id = p.id
		join core.users u on u.id = td.user_id
	where
		u.username = #{username}
		and td."timestamp" > #{targetTimestamp}
	order by td."timestamp";



	</select>

	<select id="getVillageByProviderId" parameterType="map"
			resultMap="customQueryMap">
		select * from core.get_location_tree_id(#{memberId}, #{childRoleId}, #{locationTagId});
	</select>

	<select id="getProviderLocationIdByChildRole" parameterType="map"
			resultMap="customQueryLocationTreeMap">
		select * from core.get_location_tree_id(#{memberId}, #{childRoleId}, #{locationTagId});
	</select>

	<select id="selectByRelationshipIdOfType" parameterType="map"
			resultMap="org.opensrp.repository.postgres.mapper.ClientMapper.BaseResultMap">
		select
		<include refid="org.opensrp.repository.postgres.mapper.ClientMapper.Base_Column_List" />
		from core.client${table}
		where json -> 'relationships'->#{relationshipType,jdbcType=VARCHAR} ?? #{relationshipId,jdbcType=VARCHAR}
		and date_deleted is null
	</select>


	<select id="selectByRelationShip" 
			resultMap="org.opensrp.repository.postgres.mapper.ClientMapper.BaseResultMap">
		select
		<include refid="org.opensrp.repository.postgres.mapper.ClientMapper.Base_Column_List" />
		from core.client${table}
		join jsonb_each(json -> 'relationships') j on true
		where j.value ??  #{relationshipId,jdbcType=VARCHAR}  and date_deleted is null
	</select>
	
	<select id="selectUserStatus" parameterType="java.lang.String"
			resultMap="customQueryMap">
		select u.enabled as enable from core.users as u where u.username =  #{username,jdbcType=VARCHAR}
	</select>

	<select id="findUserId" parameterType="java.lang.String"
			resultMap="customQueryMap">
		select u.id as id from core.users as u where u.username =  #{username,jdbcType=VARCHAR}
	</select>

	<select id="getMaxHealthId" parameterType="java.lang.Integer"
			resultMap="customQueryMap">
		select coalesce(max(cast(h_id as integer)), 0) as  max_health_id from core.health_id where location_id = #{locationId};
	</select>
	<update id="updateAppVersion" parameterType="map">
    	update core.users set app_version = #{version} where username = #{username}    
    </update>

	<select id="getDistrictAndUpazila" parameterType="java.lang.Integer"
			resultMap="customQueryMap">
		select district as name, upazilas as code from core.get_district_and_upazila(#{locationTag})
	</select>

	<select id="imeiCheck" parameterType="java.lang.String" resultMap="customQueryMap">
		select
			(case when count(*) > 0 then true else false end) is_available
		from
		 	core.imei where imei1 = #{imeiNumber} or imei2 = #{imeiNumber};
	</select>
	
	<select id="selectUserLocation" resultMap="userLocationMap">
		select * from core.user_location as ul where ul.username = #{username} ; 
		 	
	</select>

</mapper>
